pipeline{
  agent none
  stages{
    stage('build'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
  }
      }
      when {
        changeset "**/worker/**"
        branch 'master'
      }
      steps{
        echo 'building worker app'
        dir('worker'){
        sh 'mvn compile'
}
}
}
    stage('test'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
          }
    }
    when {
      changeset "**/worker/**"
      branch 'master'
    }
      steps{
        echo 'running unit tests on worker app'
        dir('worker'){
        sh 'mvn clean test'
}
}
}
    stage('package'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
}
    }
    when {
      changeset "**/worker/**"
      branch 'master'
    }
      steps{
<<<<<<< HEAD
        echo 'packaging worker app into a jarfile'
=======
        echo 'packaging worker app into a jarfile ,done'
>>>>>>> b02d9b348921287b5f332811ed405969e8002053
        dir('worker'){
        sh 'mvn package -DskipTests'
        archiveArtifacts artifacts: '**/target/*.jar', fingerprint:true
}
}
}

    stage('docker-package'){
      agent any
      when {
        changeset "**/worker/**"
        branch 'master'
      }
      steps{
<<<<<<< HEAD
        echo 'packaging worker image into a jarfile added'
=======
        echo 'packaging worker image into a jarfile'
>>>>>>> b02d9b348921287b5f332811ed405969e8002053
        script{
          docker.withRegistry('https://index.docker.io/v1/','dockerlogin'){
          def workerImage=docker.build("emnc/worker:v${env.BUILD_ID}","./worker")
          workerImage.push();
          workerImage.push("${env.BRANCH_NAME}");

    }
    }

}
}


}
  post{
    always{
      echo 'the job is complete'
}
}
}
